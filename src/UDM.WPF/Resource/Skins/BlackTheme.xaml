<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Theme -->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resource/Skins/Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ThemedWindow" TargetType="Window">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource ScbBlueBackground}" />
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
            <Setter Property="FontFamily" Value="Manrope SemiBold" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="SizeToContent" Value="WidthAndHeight" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="BorderBrush" Value="{StaticResource ScbBorder}"></Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="ThemedTextBlock" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
            <Setter Property="FontFamily" Value="Manrope SemiBold" />
        </Style.Setters>
    </Style>

    <Style x:Key="ThemedButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource ScbBlueBackground}" />
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
            <Setter Property="Height" Value="26" />
            <Setter Property="FontFamily" Value="Manrope SemiBold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource ScbBorder}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ScbBackgroundMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ScbBackgroundPressed}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource ScbBackground}"
                  BorderBrush="{DynamicResource ScbBorder}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource ScbBackground}"
                  BorderBrush="{DynamicResource ScbBorder}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ThemedComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource ScbForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5,3,10,7"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,3,3"
                            Focusable="True" 
                            Background="{DynamicResource ScbBackground}"
                            BorderBrush="{DynamicResource ScbBorder}"
                            Foreground="{DynamicResource ScbForeground}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource ScbBackground}"
                                BorderBrush="{DynamicResource ScbBorder}"
                                BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemedMenuItem" TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource ScbBlueBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
        <Setter Property="FontFamily" Value="Manrope SemiBold" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border">
                        <Grid>
                            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource ScbBackground}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource CBorder}" />
                                    </Border.BorderBrush>
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemedMenu" TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource ScbBlueBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
        <Setter Property="FontFamily" Value="Manrope SemiBold" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}" />
    </Style>

    <Style x:Key="ThemedTextBox" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource ScbDarkBackground}" />
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontFamily" Value="Manrope SemiBold" />
            <Setter Property="Padding" Value="3" />
        </Style.Setters>
    </Style>

    <Style x:Key="ThemedListBox" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource ScbDarkBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}" />
    </Style>

    <Style x:Key="ThemedListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
        <Setter Property="FontFamily" Value="Manrope SemiBold" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{StaticResource ScbAccent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeviceTextBox" BasedOn="{StaticResource ThemedTextBlock}" TargetType="TextBlock">
        <Setter Property="Padding" Value="3,0,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="ContextMenuItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="Manrope Bold" />
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Name="Root" Height="27" Background="{StaticResource ScbBackground}">
                        <ContentPresenter Name="HeaderHost" Margin="10,0,0,0" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                      TextOptions.TextRenderingMode="ClearType" TextBlock.FontSize="12" TextBlock.Foreground="{TemplateBinding Foreground}" TextOptions.TextFormattingMode="Display" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource ScbBackgroundMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource ScbBackgroundPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu style -->
    <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="170" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Background="Transparent">
                        <Border Margin="0,0,5,5" Background="{StaticResource ScbBackground}" BorderThickness="0">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2" />
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3" ShadowDepth="3" Color="Black" Opacity="0.5" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>