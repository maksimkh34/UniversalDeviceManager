<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Theme -->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resource/Skins/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ThemedWindow" TargetType="Window">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource ScbBlueBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
            <Setter Property="FontFamily" Value="Manrope SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="SizeToContent" Value="WidthAndHeight"/>
            <Setter Property="WindowStyle" Value="None"/>
        </Style.Setters>
    </Style>

    <Style x:Key="ThemedTextBlock" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
            <Setter Property="FontFamily" Value="Manrope SemiBold"/>
        </Style.Setters>
    </Style>

    <Style x:Key="ThemedButton" TargetType="Button">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource ScbBlueBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="FontFamily" Value="Manrope SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource ScbBorder}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ScbBackgroundMouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ScbBackgroundPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemedComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource ScbBlueBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
        <Setter Property="FontFamily" Value="Manrope SemiBold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ToggleButton x:Name="PART_ToggleButton" Content="{TemplateBinding SelectionBoxItem}" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="Left">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <ContentPresenter/>
                                        <Path x:Name="Arrow" Data="M0,0 L4,4 L8,0" Fill="{StaticResource ScbForeground}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4,0,4,0"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup" IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}" Placement="Bottom" AllowsTransparency="True" Focusable="False">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ScbBackgroundMouseOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemedMenuItem" TargetType="MenuItem" >
        <Setter Property="Background" Value="{StaticResource ScbBlueBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
        <Setter Property="FontFamily" Value="Manrope SemiBold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border">
                        <Grid>
                            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" Background="{DynamicResource ScbBackground}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource CBorder}" />
                                    </Border.BorderBrush>
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemedMenu" TargetType="Menu" >
        <Setter Property="Background" Value="{StaticResource ScbBlueBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
        <Setter Property="FontFamily" Value="Manrope SemiBold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}"/>
    </Style>

    <Style x:Key="ThemedTextBox" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource ScbDarkBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Manrope SemiBold"/>
            <Setter Property="Padding" Value="3"/>
        </Style.Setters>
    </Style>

    <Style x:Key="ThemedListBox" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource ScbDarkBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScbBorder}"/>
    </Style>

    <Style x:Key="ThemedListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
        <Setter Property="FontFamily" Value="Manrope SemiBold"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="_Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="_Border" Property="Background" Value="{StaticResource ScbAccent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeviceTextBox" BasedOn="{StaticResource ThemedTextBlock}" TargetType="TextBlock">
        <Setter Property="Padding" Value="3,0,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="ContextMenuItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Manrope Bold"/>
        <Setter Property="Foreground" Value="{StaticResource ScbForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Name="Root" Height="27" Background="{StaticResource ScbBackground}">
                        <ContentPresenter Name="HeaderHost" Margin="10,0,0,0" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                      TextOptions.TextRenderingMode="ClearType" TextBlock.FontSize="12" TextBlock.Foreground="{TemplateBinding Foreground}" TextOptions.TextFormattingMode="Display"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource ScbBackgroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource ScbBackgroundPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu style -->
    <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Background="Transparent">
                        <Border Margin="0,0,5,5" Background="{StaticResource ScbBackground}" BorderThickness="0">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2"/>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3" ShadowDepth="3" Color="Black" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>